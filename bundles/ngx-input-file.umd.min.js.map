{"version":3,"sources":["ng://ngx-input-file/src/lib/dto/input-file.ts","null","ng://ngx-input-file/src/lib/services/input-file.service.ts","ng://ngx-input-file/src/lib/components/input-file/input-file.component.ts","ng://ngx-input-file/src/lib/directives/drop-zone/drop-zone.directive.ts","ng://ngx-input-file/src/lib/input-file.module.ts"],"names":["InputFile","id","preview","file","this","__values","o","m","Symbol","iterator","i","call","next","length","value","done","InputFileService","_config","Object","defineProperty","prototype","limitGuard","files","fileLimit","sizeGuard","sizeLimit","size","typeGuard","fileAccept","enabled","types","replace","split","types_1","tslib_1.__values","types_1_1","type","startsWith","charAt","name","endsWith","Injectable","args","providedIn","Inject","InputFileComponent","inputFileService","EventEmitter","Array","_fileAccept","config","_fileLimit","_sizeLimit","onDeleteFile","index","disabled","slice","deletedFile","emit","splice","writeValue","onDragOver","button","ripple","launch","centered","persistent","onDragLeave","fadeOutAll","onReplaceFile","fileList","fileInput","inputFile","item","fileGuard","acceptedFile","onSelectFile","files_1","from","forEach","_this","push","nativeElement","registerOnChange","fn","onChange","registerOnTouched","onTouched","setDisabledState","isDisabled","setFilePreview","bypassLimit","rejectedFile","reason","InputFileRejectedReason","badFile","sizeReached","limitReached","this_1","fr_1","FileReader","onload","result","readAsDataURL","Component","selector","template","styles","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","Input","Output","ViewChild","DropZoneDirective","event","preventAndStopEventPropagation","isOver","itemDragOver","isTrueLeave","itemDragLeave","onDrop","DragEvent","itemDrop","dataTransfer","e","console","error","preventDefault","stopPropagation","_a","whiteListClasses","_b","c","fromElement","className","indexOf","Directive","HostListener","InputFileModule","forRoot","ngModule","useValue","NgModule","declarations","imports","CommonModule","FormsModule","MatButtonModule","MatIconModule","exports","entryComponents"],"mappings":"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","sourcesContent":["export class InputFile {\r\n    public id: any;\r\n    public file: File;\r\n    public preview: string;\r\n\r\n    constructor(\r\n        id: any,\r\n        preview: string,\r\n        file?: File\r\n    ) {\r\n        this.id = id;\r\n        this.preview = preview;\r\n        this.file = file;\r\n    }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { InputFile } from '../dto/input-file';\r\nimport { InputFileConfig } from '../interfaces/input-file-config';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class InputFileService {\r\n\r\n    constructor(\r\n        @Inject('config') private _config: InputFileConfig\r\n    ) { }\r\n\r\n    get config() {\r\n        return this._config;\r\n    }\r\n\r\n    /**\r\n     * Whether the limit is not reached.\r\n     * @param files\r\n     */\r\n    public limitGuard(files: Array<InputFile>, fileLimit): boolean {\r\n        return files.length < fileLimit;\r\n    }\r\n\r\n    /**\r\n     * Whether the file size is not bigger than the limit.\r\n     * @param file\r\n     * @param sizeLimit\r\n     */\r\n    public sizeGuard(file: File, sizeLimit: number): boolean {\r\n        return !sizeLimit || file.size < sizeLimit * 1024 * 1024; // TODO : improve\r\n    }\r\n\r\n    /**\r\n     * Whether the type of the file is enabled.\r\n     * @param file\r\n     * @param fileAccept\r\n     */\r\n    public typeGuard(file: File, fileAccept: string): boolean {\r\n        let enabled = fileAccept == null;\r\n        if (fileAccept) {\r\n            const accept = fileAccept.replace('*', '');\r\n            const types = accept.split(',');\r\n            for (const type of types) {\r\n                if (file.type.startsWith(type) || (type.charAt(0) === '.' && file.name != null && file.name.endsWith(type))) {\r\n                    enabled = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return enabled;\r\n    }\r\n}\r\n","import { Component, ElementRef, EventEmitter, forwardRef, Input, Output, ViewChild } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { InputFile } from '../../dto/input-file';\r\nimport { InputFileRejected } from '../../interfaces/input-file-rejected';\r\nimport { InputFileRejectedReason } from '../../enums/input-file-rejected-reason';\r\nimport { InputFileService } from '../../services/input-file.service';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { NumberSymbol } from '@angular/common';\r\n\r\n@Component({\r\n    selector: 'input-file',\r\n    template: `<div class=\"input-file-container\" [style.width.%]=\"width\" [style.height.%]=\"height\">\r\n    <label class=\"mat-orphan-label\" [for]=\"inputId\" [class.active]=\"files?.length\" [innerHtml]=\"placeholder\" *ngIf=\"placeholder\"></label>\r\n    <div class=\"files-container\" [style.width.%]=\"width\" [style.height.%]=\"height\">\r\n\r\n        <ng-container *ngFor=\"let file of files; let i = index\">\r\n            <div class=\"file-container bounce-in\" [style.width.%]=\"widthPreview\" [style.height.%]=\"heightPreview\">\r\n                <button mat-button inputFileDropZone class=\"replace-button\" type=\"button\" (click)=\"fileReplace.click()\" (itemDrop)=\"onReplaceFile($event, i,replaceButton)\"\r\n                    [disabled]=\"disabled\" (itemDragOver)=\"onDragOver(replaceButton)\" (itemDragLeave)=\"onDragLeave(replaceButton)\"\r\n                    #replaceButton>\r\n                    <img class=\"image-preview\" [src]=\"file.preview\" *ngIf=\"file.preview; else noPreview\">\r\n                    <ng-template #noPreview>\r\n                        <mat-icon class=\"input-icon\">insert_drive_file</mat-icon>\r\n                        <div class=\"file-name text-truncate\" [innerHtml]=\"file.file.name\" *ngIf=\"file.file\"></div>\r\n                    </ng-template>\r\n\r\n                </button>\r\n                <button mat-button class=\"delete-button\" type=\"button\" [style.width.%]=\"widthPreview\" (click)=\"onDeleteFile(i)\" [disabled]=\"disabled\">\r\n                    <mat-icon>delete</mat-icon>\r\n                </button>\r\n            </div>\r\n            <input [accept]=\"fileAccept\" hidden type=\"file\" #fileReplace (change)=\"onReplaceFile($event.target.files, i, replaceButton, fileReplace)\">\r\n        </ng-container>\r\n\r\n        <ng-container *ngIf=\"canAddFile\">\r\n            <button mat-button inputFileDropZone class=\"file-button\" type=\"button\" (click)=\"fileInput.click()\" (itemDrop)=\"onSelectFile($event, selectButton)\"\r\n                (itemDragOver)=\"onDragOver(selectButton)\" (itemDragLeave)=\"onDragLeave(selectButton)\" [style.width.%]=\"width\" [style.height.%]=\"height\"\r\n                 [disabled]=\"disabled\" #selectButton>\r\n                <mat-icon class=\"input-icon\">add</mat-icon>\r\n                <div [innerHtml]=\"internalPlaceholder\" *ngIf=\"internalPlaceholder\"></div>\r\n            </button>\r\n            <input [id]=\"inputId\" [accept]=\"fileAccept\" hidden type=\"file\" [attr.multiple]=\"fileLimit > 1 ? true : null\" #fileInput (change)=\"onSelectFile($event.target.files, selectButton)\">\r\n        </ng-container>\r\n    </div>\r\n\r\n</div>`,\r\n    styles: [`.input-file-container{position:relative}.input-file-container .files-container{display:flex;flex-direction:row;flex-wrap:wrap;padding-top:1.25rem}.input-file-container .file-button,.input-file-container .file-container{align-items:center;display:flex;height:10rem;justify-content:center;width:10rem}.input-file-container .delete-button{width:10rem}.input-file-container .file-container{flex-direction:column;margin-right:1rem}.input-file-container .replace-button{flex:1;width:10rem}.input-file-container .mat-button:focus{outline:0}.input-file-container .file-name{width:calc(10rem - 2.5rem)}.input-file-container .image-preview{margin:0 -16px;height:10rem;-o-object-fit:contain;object-fit:contain;width:10rem}.input-file-container .input-icon{font-size:calc(10rem / 4);height:calc(10rem / 4);width:calc(10rem / 4)}.input-file-container .mat-orphan-label{color:rgba(0,0,0,.54);display:block;font-size:1rem;left:0;margin:0;position:absolute;top:0;-webkit-transform-origin:0;transform-origin:0;transition:.4s cubic-bezier(.25,.8,.25,1),width .4s cubic-bezier(.25,.8,.25,1)}.input-file-container .mat-orphan-label.active{-webkit-transform:scale(.75);transform:scale(.75)}@-webkit-keyframes bounceIn{20%,40%,60%,80%,from,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;-webkit-transform:scale3d(.3,.3,.3);transform:scale3d(.3,.3,.3)}20%{-webkit-transform:scale3d(1.1,1.1,1.1);transform:scale3d(1.1,1.1,1.1)}40%{-webkit-transform:scale3d(.9,.9,.9);transform:scale3d(.9,.9,.9)}60%{opacity:1;-webkit-transform:scale3d(1.03,1.03,1.03);transform:scale3d(1.03,1.03,1.03)}80%{-webkit-transform:scale3d(.97,.97,.97);transform:scale3d(.97,.97,.97)}to{opacity:1;-webkit-transform:scale3d(1,1,1);transform:scale3d(1,1,1)}}@keyframes bounceIn{20%,40%,60%,80%,from,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;-webkit-transform:scale3d(.3,.3,.3);transform:scale3d(.3,.3,.3)}20%{-webkit-transform:scale3d(1.1,1.1,1.1);transform:scale3d(1.1,1.1,1.1)}40%{-webkit-transform:scale3d(.9,.9,.9);transform:scale3d(.9,.9,.9)}60%{opacity:1;-webkit-transform:scale3d(1.03,1.03,1.03);transform:scale3d(1.03,1.03,1.03)}80%{-webkit-transform:scale3d(.97,.97,.97);transform:scale3d(.97,.97,.97)}to{opacity:1;-webkit-transform:scale3d(1,1,1);transform:scale3d(1,1,1)}}.bounce-in{-webkit-animation-duration:.75s;animation-duration:.75s;-webkit-animation-name:bounceIn;animation-name:bounceIn}`],\r\n    providers: [\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: forwardRef(() => InputFileComponent),\r\n            multi: true\r\n        }\r\n    ]\r\n})\r\nexport class InputFileComponent implements ControlValueAccessor {\r\n    private _fileAccept: string;\r\n    private _fileLimit: number;\r\n    private _sizeLimit: number;\r\n\r\n    @Input() disabled: boolean;\r\n    @Input() inputId: string;\r\n    @Input() placeholder: string;\r\n    @Input() internalPlaceholder: string;\r\n    @Input() width: number;\r\n    @Input() height: number;\r\n    @Input() widthPreview: number;\r\n    @Input() heightPreview: number;\r\n\r\n    @Input() set fileAccept(fileAccept: string) {\r\n        this._fileAccept = fileAccept;\r\n    }\r\n\r\n    get fileAccept() {\r\n        return this._fileAccept || this.inputFileService.config.fileAccept || '*';\r\n    }\r\n\r\n    @Input() set fileLimit(fileLimit: number) {\r\n        this._fileLimit = fileLimit;\r\n    }\r\n\r\n    get fileLimit() {\r\n        return this._fileLimit || this.inputFileService.config.fileLimit || 1;\r\n    }\r\n\r\n    @Input() set sizeLimit(sizeLimit: number) {\r\n        this._sizeLimit = sizeLimit;\r\n    }\r\n\r\n    get sizeLimit() {\r\n        return this._sizeLimit || this.inputFileService.config.sizeLimit || null;\r\n    }\r\n\r\n    @Output() acceptedFile = new EventEmitter<InputFile>();\r\n    @Output() deletedFile = new EventEmitter<InputFile>();\r\n    @Output() rejectedFile = new EventEmitter<InputFileRejected>();\r\n    @ViewChild('fileInput') fileInput: ElementRef;\r\n\r\n    public files = new Array<InputFile>();\r\n    public onChange = (files: Array<InputFile>) => { };\r\n    public onTouched = () => { };\r\n\r\n    get canAddFile(): boolean {\r\n        return this.files && this.files.length < this.fileLimit;\r\n    }\r\n\r\n    constructor(\r\n        private inputFileService: InputFileService\r\n    ) { }\r\n\r\n    /**\r\n     * On delete a file event handler.\r\n     * @param index\r\n     */\r\n    public onDeleteFile(index: number): void {\r\n        if (!this.disabled) {\r\n            const files = this.files.slice();\r\n            this.deletedFile.emit(files[index]);\r\n            files.splice(index, 1);\r\n            this.writeValue(files);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * On drag over event handler.\r\n     * Adds a ripple effect on the button.\r\n     */\r\n    public onDragOver(button: MatButton): void {\r\n        button.ripple.launch({ centered: true, persistent: true });\r\n    }\r\n\r\n    /**\r\n     * On drag leave event handler.\r\n     * Fades the ripple effect of the button.\r\n     */\r\n    public onDragLeave(button: MatButton): void {\r\n        button.ripple.fadeOutAll();\r\n    }\r\n\r\n    /**\r\n     * On replace one file event handler.\r\n     * Writes the value.\r\n     * @param fileList\r\n     * @param index\r\n     * @param fileInput\r\n     */\r\n    public onReplaceFile(fileList: FileList, index: number, button: MatButton, fileInput?: HTMLInputElement): void {\r\n        if (!this.disabled) {\r\n            // Copies the array without reference.\r\n            const files = this.files.slice();\r\n            // Assumes that a single file can be replaced by a single file.\r\n            const inputFile = new InputFile(null, null, fileList.item(0));\r\n            button.ripple.fadeOutAll();\r\n            if (this.fileGuard(files, inputFile, true)) {\r\n                files[index] = inputFile;\r\n                this.acceptedFile.emit(inputFile);\r\n            }\r\n            this.writeValue(files);\r\n            if (fileInput) {\r\n                fileInput.value = '';\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * On select one or more files event handler.\r\n     * Writes the value.\r\n     * @param fileList\r\n     */\r\n    public onSelectFile(fileList: FileList, button: MatButton): void {\r\n        if (!this.disabled) {\r\n            button.ripple.fadeOutAll();\r\n            // Copies the array without reference.\r\n            const files = this.files.slice();\r\n            Array.from(fileList).forEach(file => {\r\n                const inputFile = new InputFile(null, null, file);\r\n                if (this.fileGuard(files, inputFile)) {\r\n                    files.push(inputFile);\r\n                    this.acceptedFile.emit(inputFile);\r\n                }\r\n            });\r\n            this.writeValue(files);\r\n            this.fileInput.nativeElement.value = '';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Implementation of ControlValueAccessor.\r\n     * @param fn\r\n     */\r\n    public registerOnChange(fn: (files: Array<InputFile>) => void): void {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    /**\r\n     * Implementation of ControlValueAccessor.\r\n     * @param fn\r\n     */\r\n    public registerOnTouched(fn: () => void): void {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    /**\r\n     * Implementation of ControlValueAccessor.\r\n     * @param isDisabled\r\n     */\r\n    public setDisabledState(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    /**\r\n     * Implementation of ControlValueAccessor.\r\n     * @param files\r\n     */\r\n    public writeValue(files: Array<InputFile>): void {\r\n        if (!this.disabled) {\r\n            this.files = files;\r\n            this.setFilePreview();\r\n            this.onChange(this.files);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Whether the file can be added to the model.\r\n     * @param files\r\n     * @param file,\r\n     * @param bypassLimit\r\n     */\r\n    private fileGuard(files: Array<InputFile>, file: InputFile, bypassLimit?: boolean): boolean {\r\n        if (!bypassLimit && !this.inputFileService.limitGuard(files, this.fileLimit)) {\r\n            this.rejectedFile.emit({ reason: InputFileRejectedReason.limitReached, file: file });\r\n            return false;\r\n        }\r\n\r\n        if (!this.inputFileService.sizeGuard(file.file, this.sizeLimit)) {\r\n            this.rejectedFile.emit({ reason: InputFileRejectedReason.sizeReached, file: file });\r\n            return false;\r\n        }\r\n\r\n        if (!this.inputFileService.typeGuard(file.file, this.fileAccept)) {\r\n            this.rejectedFile.emit({ reason: InputFileRejectedReason.badFile, file: file });\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets the file preview with FileReader.\r\n     */\r\n    public setFilePreview(): void {\r\n        for (const index in this.files) {\r\n            if (this.files[index].file != null && this.inputFileService.typeGuard(this.files[index].file, 'image/*')) {\r\n                const fr = new FileReader();\r\n                fr.onload = () => {\r\n                    this.files[index].preview = fr.result;\r\n                };\r\n                fr.readAsDataURL(this.files[index].file);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import {\r\n    Directive,\r\n    EventEmitter,\r\n    HostListener,\r\n    Input,\r\n    Output,\r\n    } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[inputFileDropZone]'\r\n})\r\nexport class DropZoneDirective {\r\n    @Input() public disabled = false;\r\n    @Output() public itemDragOver = new EventEmitter<any>();\r\n    @Output() public itemDragLeave = new EventEmitter<any>();\r\n    @Output() public itemDrop = new EventEmitter<any>();\r\n\r\n    private isOver: boolean;\r\n    // Prevent dragleave on children, could be better but it's cheap for better performance\r\n    private whiteListClasses = ['file-button', 'mat-button-wrapper', 'input-icon'];\r\n\r\n    /**\r\n     * Drag Over event handler.\r\n     * @param event\r\n     */\r\n    @HostListener('dragover', ['$event'])\r\n    public onDragOver(event: DragEvent): void {\r\n        this.preventAndStopEventPropagation(event);\r\n        if (!this.isOver && !this.disabled) {\r\n            this.isOver = true;\r\n            this.itemDragOver.emit();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Drag Leave event handler.\r\n     * @param event\r\n     */\r\n    @HostListener('dragleave', ['$event'])\r\n    public onDragLeave(event: DragEvent): void {\r\n        this.preventAndStopEventPropagation(event);\r\n        if (this.isOver && this.isTrueLeave(event) && !this.disabled) {\r\n            this.isOver = false;\r\n            this.itemDragLeave.emit();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Drop event handler.\r\n     * @param event\r\n     */\r\n    @HostListener('drop', ['$event'])\r\n    public onDrop(event: any): void {\r\n        if (!this.disabled && event instanceof DragEvent) {\r\n            this.preventAndStopEventPropagation(event);\r\n            this.isOver = false;\r\n            try {\r\n                this.itemDrop.emit(event.dataTransfer.files);\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Prevents and stops event propagration.\r\n     * @param event\r\n     */\r\n    private preventAndStopEventPropagation(event: Event): void {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    }\r\n\r\n    /**\r\n     * Checks if the leave is not trigger by a children.\r\n     * @param event\r\n     */\r\n    private isTrueLeave(event: DragEvent): boolean {\r\n        for (const c of this.whiteListClasses) {\r\n            if (event.fromElement != null && event.fromElement.className.indexOf(c) >= 0) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { DropZoneDirective } from './directives/drop-zone/drop-zone.directive';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { InputFileComponent } from './components/input-file/input-file.component';\r\nimport { InputFileConfig } from './interfaces/input-file-config';\r\nimport { InputFileService } from './services/input-file.service';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { ModuleWithProviders, NgModule } from '@angular/core';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        DropZoneDirective,\r\n        InputFileComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        MatButtonModule,\r\n        MatIconModule\r\n    ],\r\n    exports : [\r\n        InputFileComponent\r\n    ],\r\n    providers: [\r\n        InputFileService\r\n    ],\r\n    entryComponents: [ InputFileComponent ]\r\n})\r\n\r\nexport class InputFileModule {\r\n    public static forRoot(config: InputFileConfig): ModuleWithProviders {\r\n        return {\r\n            ngModule: InputFileModule,\r\n            providers: [\r\n                InputFileService,\r\n                { provide: 'config', useValue: config }\r\n            ]\r\n        };\r\n    }\r\n}\r\n"]}