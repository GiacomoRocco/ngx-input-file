{"version":3,"file":"ngx-input-file.js.map","sources":["ng://ngx-input-file/src/lib/dto/input-file.ts","ng://ngx-input-file/src/lib/services/input-file.service.ts","ng://ngx-input-file/src/lib/components/input-file/input-file.component.ts","ng://ngx-input-file/src/lib/directives/drop-zone/drop-zone.directive.ts","ng://ngx-input-file/src/lib/input-file.module.ts"],"sourcesContent":["export class InputFile {\r\n    public id: any;\r\n    public file: File;\r\n    public preview: string;\r\n\r\n    constructor(\r\n        id: any,\r\n        preview: string,\r\n        file?: File\r\n    ) {\r\n        this.id = id;\r\n        this.preview = preview;\r\n        this.file = file;\r\n    }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { InputFile } from '../dto/input-file';\r\nimport { InputFileConfig } from '../interfaces/input-file-config';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class InputFileService {\r\n\r\n    constructor(\r\n        @Inject('config') private _config: InputFileConfig\r\n    ) { }\r\n\r\n    get config() {\r\n        return this._config;\r\n    }\r\n\r\n    /**\r\n     * Whether the limit is not reached.\r\n     * @param files\r\n     */\r\n    public limitGuard(files: Array<InputFile>, fileLimit): boolean {\r\n        return files.length < fileLimit;\r\n    }\r\n\r\n    /**\r\n     * Whether the file size is not bigger than the limit.\r\n     * @param file\r\n     * @param sizeLimit\r\n     */\r\n    public sizeGuard(file: File, sizeLimit: number): boolean {\r\n        return !sizeLimit || file.size < sizeLimit * 1024 * 1024; // TODO : improve\r\n    }\r\n\r\n    /**\r\n     * Whether the type of the file is enabled.\r\n     * @param file\r\n     * @param fileAccept\r\n     */\r\n    public typeGuard(file: File, fileAccept: string): boolean {\r\n        let enabled = fileAccept == null;\r\n        if (fileAccept) {\r\n            const accept = fileAccept.replace('*', '');\r\n            const types = accept.split(',');\r\n            for (const type of types) {\r\n                if (file.type.startsWith(type) || (type.charAt(0) === '.' && file.name != null && file.name.endsWith(type))) {\r\n                    enabled = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return enabled;\r\n    }\r\n}\r\n","import { Component, ElementRef, EventEmitter, forwardRef, Input, Output, ViewChild } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { InputFile } from '../../dto/input-file';\r\nimport { InputFileRejected } from '../../interfaces/input-file-rejected';\r\nimport { InputFileRejectedReason } from '../../enums/input-file-rejected-reason';\r\nimport { InputFileService } from '../../services/input-file.service';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { NumberSymbol } from '@angular/common';\r\n\r\n@Component({\r\n    selector: 'input-file',\r\n    template: `<div class=\"input-file-container\" [style.width.%]=\"width\" [style.height.%]=\"height\">\r\n    <label class=\"mat-orphan-label\" [for]=\"inputId\" [class.active]=\"files?.length\" [innerHtml]=\"placeholder\" *ngIf=\"placeholder\"></label>\r\n    <div class=\"files-container\" [style.width.%]=\"width\" [style.height.%]=\"height\">\r\n\r\n        <ng-container *ngFor=\"let file of files; let i = index\">\r\n            <div class=\"file-container bounce-in\" [style.width.%]=\"widthPreview\" [style.height.%]=\"heightPreview\">\r\n                <button mat-button inputFileDropZone class=\"replace-button\" type=\"button\" (click)=\"fileReplace.click()\" (itemDrop)=\"onReplaceFile($event, i,replaceButton)\"\r\n                    [disabled]=\"disabled\" (itemDragOver)=\"onDragOver(replaceButton)\" (itemDragLeave)=\"onDragLeave(replaceButton)\"\r\n                    #replaceButton>\r\n                    <img class=\"image-preview\" [src]=\"file.preview\" *ngIf=\"file.preview; else noPreview\">\r\n                    <ng-template #noPreview>\r\n                        <mat-icon class=\"input-icon\">insert_drive_file</mat-icon>\r\n                        <div class=\"file-name text-truncate\" [innerHtml]=\"file.file.name\" *ngIf=\"file.file\"></div>\r\n                    </ng-template>\r\n\r\n                </button>\r\n                <button mat-button class=\"delete-button\" type=\"button\" [style.width.%]=\"widthPreview\" (click)=\"onDeleteFile(i)\" [disabled]=\"disabled\">\r\n                    <mat-icon>delete</mat-icon>\r\n                </button>\r\n            </div>\r\n            <input [accept]=\"fileAccept\" hidden type=\"file\" #fileReplace (change)=\"onReplaceFile($event.target.files, i, replaceButton, fileReplace)\">\r\n        </ng-container>\r\n\r\n        <ng-container *ngIf=\"canAddFile\">\r\n            <button mat-button inputFileDropZone class=\"file-button\" type=\"button\" (click)=\"fileInput.click()\" (itemDrop)=\"onSelectFile($event, selectButton)\"\r\n                (itemDragOver)=\"onDragOver(selectButton)\" (itemDragLeave)=\"onDragLeave(selectButton)\" [style.width.%]=\"width\" [style.height.%]=\"height\"\r\n                 [disabled]=\"disabled\" #selectButton>\r\n                <mat-icon class=\"input-icon\">add</mat-icon>\r\n                <div [innerHtml]=\"internalPlaceholder\" *ngIf=\"internalPlaceholder\"></div>\r\n            </button>\r\n            <input [id]=\"inputId\" [accept]=\"fileAccept\" hidden type=\"file\" [attr.multiple]=\"fileLimit > 1 ? true : null\" #fileInput (change)=\"onSelectFile($event.target.files, selectButton)\">\r\n        </ng-container>\r\n    </div>\r\n\r\n</div>`,\r\n    styles: [`.input-file-container{position:relative}.input-file-container .files-container{display:flex;flex-direction:row;flex-wrap:wrap;padding-top:1.25rem}.input-file-container .file-button,.input-file-container .file-container{align-items:center;display:flex;height:10rem;justify-content:center;width:10rem}.input-file-container .delete-button{width:10rem}.input-file-container .file-container{flex-direction:column;margin-right:1rem}.input-file-container .replace-button{flex:1;width:10rem}.input-file-container .mat-button:focus{outline:0}.input-file-container .file-name{width:calc(10rem - 2.5rem)}.input-file-container .image-preview{margin:0 -16px;height:10rem;-o-object-fit:contain;object-fit:contain;width:10rem}.input-file-container .input-icon{font-size:calc(10rem / 4);height:calc(10rem / 4);width:calc(10rem / 4)}.input-file-container .mat-orphan-label{color:rgba(0,0,0,.54);display:block;font-size:1rem;left:0;margin:0;position:absolute;top:0;-webkit-transform-origin:0;transform-origin:0;transition:.4s cubic-bezier(.25,.8,.25,1),width .4s cubic-bezier(.25,.8,.25,1)}.input-file-container .mat-orphan-label.active{-webkit-transform:scale(.75);transform:scale(.75)}@-webkit-keyframes bounceIn{20%,40%,60%,80%,from,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;-webkit-transform:scale3d(.3,.3,.3);transform:scale3d(.3,.3,.3)}20%{-webkit-transform:scale3d(1.1,1.1,1.1);transform:scale3d(1.1,1.1,1.1)}40%{-webkit-transform:scale3d(.9,.9,.9);transform:scale3d(.9,.9,.9)}60%{opacity:1;-webkit-transform:scale3d(1.03,1.03,1.03);transform:scale3d(1.03,1.03,1.03)}80%{-webkit-transform:scale3d(.97,.97,.97);transform:scale3d(.97,.97,.97)}to{opacity:1;-webkit-transform:scale3d(1,1,1);transform:scale3d(1,1,1)}}@keyframes bounceIn{20%,40%,60%,80%,from,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;-webkit-transform:scale3d(.3,.3,.3);transform:scale3d(.3,.3,.3)}20%{-webkit-transform:scale3d(1.1,1.1,1.1);transform:scale3d(1.1,1.1,1.1)}40%{-webkit-transform:scale3d(.9,.9,.9);transform:scale3d(.9,.9,.9)}60%{opacity:1;-webkit-transform:scale3d(1.03,1.03,1.03);transform:scale3d(1.03,1.03,1.03)}80%{-webkit-transform:scale3d(.97,.97,.97);transform:scale3d(.97,.97,.97)}to{opacity:1;-webkit-transform:scale3d(1,1,1);transform:scale3d(1,1,1)}}.bounce-in{-webkit-animation-duration:.75s;animation-duration:.75s;-webkit-animation-name:bounceIn;animation-name:bounceIn}`],\r\n    providers: [\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: forwardRef(() => InputFileComponent),\r\n            multi: true\r\n        }\r\n    ]\r\n})\r\nexport class InputFileComponent implements ControlValueAccessor {\r\n    private _fileAccept: string;\r\n    private _fileLimit: number;\r\n    private _sizeLimit: number;\r\n\r\n    @Input() disabled: boolean;\r\n    @Input() inputId: string;\r\n    @Input() placeholder: string;\r\n    @Input() internalPlaceholder: string;\r\n    @Input() width: number;\r\n    @Input() height: number;\r\n    @Input() widthPreview: number;\r\n    @Input() heightPreview: number;\r\n\r\n    @Input() set fileAccept(fileAccept: string) {\r\n        this._fileAccept = fileAccept;\r\n    }\r\n\r\n    get fileAccept() {\r\n        return this._fileAccept || this.inputFileService.config.fileAccept || '*';\r\n    }\r\n\r\n    @Input() set fileLimit(fileLimit: number) {\r\n        this._fileLimit = fileLimit;\r\n    }\r\n\r\n    get fileLimit() {\r\n        return this._fileLimit || this.inputFileService.config.fileLimit || 1;\r\n    }\r\n\r\n    @Input() set sizeLimit(sizeLimit: number) {\r\n        this._sizeLimit = sizeLimit;\r\n    }\r\n\r\n    get sizeLimit() {\r\n        return this._sizeLimit || this.inputFileService.config.sizeLimit || null;\r\n    }\r\n\r\n    @Output() acceptedFile = new EventEmitter<InputFile>();\r\n    @Output() deletedFile = new EventEmitter<InputFile>();\r\n    @Output() rejectedFile = new EventEmitter<InputFileRejected>();\r\n    @ViewChild('fileInput') fileInput: ElementRef;\r\n\r\n    public files = new Array<InputFile>();\r\n    public onChange = (files: Array<InputFile>) => { };\r\n    public onTouched = () => { };\r\n\r\n    get canAddFile(): boolean {\r\n        return this.files && this.files.length < this.fileLimit;\r\n    }\r\n\r\n    constructor(\r\n        private inputFileService: InputFileService\r\n    ) { }\r\n\r\n    /**\r\n     * On delete a file event handler.\r\n     * @param index\r\n     */\r\n    public onDeleteFile(index: number): void {\r\n        if (!this.disabled) {\r\n            const files = this.files.slice();\r\n            this.deletedFile.emit(files[index]);\r\n            files.splice(index, 1);\r\n            this.writeValue(files);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * On drag over event handler.\r\n     * Adds a ripple effect on the button.\r\n     */\r\n    public onDragOver(button: MatButton): void {\r\n        button.ripple.launch({ centered: true, persistent: true });\r\n    }\r\n\r\n    /**\r\n     * On drag leave event handler.\r\n     * Fades the ripple effect of the button.\r\n     */\r\n    public onDragLeave(button: MatButton): void {\r\n        button.ripple.fadeOutAll();\r\n    }\r\n\r\n    /**\r\n     * On replace one file event handler.\r\n     * Writes the value.\r\n     * @param fileList\r\n     * @param index\r\n     * @param fileInput\r\n     */\r\n    public onReplaceFile(fileList: FileList, index: number, button: MatButton, fileInput?: HTMLInputElement): void {\r\n        if (!this.disabled) {\r\n            // Copies the array without reference.\r\n            const files = this.files.slice();\r\n            // Assumes that a single file can be replaced by a single file.\r\n            const inputFile = new InputFile(null, null, fileList.item(0));\r\n            button.ripple.fadeOutAll();\r\n            if (this.fileGuard(files, inputFile, true)) {\r\n                files[index] = inputFile;\r\n                this.acceptedFile.emit(inputFile);\r\n            }\r\n            this.writeValue(files);\r\n            if (fileInput) {\r\n                fileInput.value = '';\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * On select one or more files event handler.\r\n     * Writes the value.\r\n     * @param fileList\r\n     */\r\n    public onSelectFile(fileList: FileList, button: MatButton): void {\r\n        if (!this.disabled) {\r\n            button.ripple.fadeOutAll();\r\n            // Copies the array without reference.\r\n            const files = this.files.slice();\r\n            Array.from(fileList).forEach(file => {\r\n                const inputFile = new InputFile(null, null, file);\r\n                if (this.fileGuard(files, inputFile)) {\r\n                    files.push(inputFile);\r\n                    this.acceptedFile.emit(inputFile);\r\n                }\r\n            });\r\n            this.writeValue(files);\r\n            this.fileInput.nativeElement.value = '';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Implementation of ControlValueAccessor.\r\n     * @param fn\r\n     */\r\n    public registerOnChange(fn: (files: Array<InputFile>) => void): void {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    /**\r\n     * Implementation of ControlValueAccessor.\r\n     * @param fn\r\n     */\r\n    public registerOnTouched(fn: () => void): void {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    /**\r\n     * Implementation of ControlValueAccessor.\r\n     * @param isDisabled\r\n     */\r\n    public setDisabledState(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    /**\r\n     * Implementation of ControlValueAccessor.\r\n     * @param files\r\n     */\r\n    public writeValue(files: Array<InputFile>): void {\r\n        if (!this.disabled) {\r\n            this.files = files;\r\n            this.setFilePreview();\r\n            this.onChange(this.files);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Whether the file can be added to the model.\r\n     * @param files\r\n     * @param file,\r\n     * @param bypassLimit\r\n     */\r\n    private fileGuard(files: Array<InputFile>, file: InputFile, bypassLimit?: boolean): boolean {\r\n        if (!bypassLimit && !this.inputFileService.limitGuard(files, this.fileLimit)) {\r\n            this.rejectedFile.emit({ reason: InputFileRejectedReason.limitReached, file: file });\r\n            return false;\r\n        }\r\n\r\n        if (!this.inputFileService.sizeGuard(file.file, this.sizeLimit)) {\r\n            this.rejectedFile.emit({ reason: InputFileRejectedReason.sizeReached, file: file });\r\n            return false;\r\n        }\r\n\r\n        if (!this.inputFileService.typeGuard(file.file, this.fileAccept)) {\r\n            this.rejectedFile.emit({ reason: InputFileRejectedReason.badFile, file: file });\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets the file preview with FileReader.\r\n     */\r\n    public setFilePreview(): void {\r\n        for (const index in this.files) {\r\n            if (this.files[index].file != null && this.inputFileService.typeGuard(this.files[index].file, 'image/*')) {\r\n                const fr = new FileReader();\r\n                fr.onload = () => {\r\n                    this.files[index].preview = fr.result;\r\n                };\r\n                fr.readAsDataURL(this.files[index].file);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import {\r\n    Directive,\r\n    EventEmitter,\r\n    HostListener,\r\n    Input,\r\n    Output,\r\n    } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[inputFileDropZone]'\r\n})\r\nexport class DropZoneDirective {\r\n    @Input() public disabled = false;\r\n    @Output() public itemDragOver = new EventEmitter<any>();\r\n    @Output() public itemDragLeave = new EventEmitter<any>();\r\n    @Output() public itemDrop = new EventEmitter<any>();\r\n\r\n    private isOver: boolean;\r\n    // Prevent dragleave on children, could be better but it's cheap for better performance\r\n    private whiteListClasses = ['file-button', 'mat-button-wrapper', 'input-icon'];\r\n\r\n    /**\r\n     * Drag Over event handler.\r\n     * @param event\r\n     */\r\n    @HostListener('dragover', ['$event'])\r\n    public onDragOver(event: DragEvent): void {\r\n        this.preventAndStopEventPropagation(event);\r\n        if (!this.isOver && !this.disabled) {\r\n            this.isOver = true;\r\n            this.itemDragOver.emit();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Drag Leave event handler.\r\n     * @param event\r\n     */\r\n    @HostListener('dragleave', ['$event'])\r\n    public onDragLeave(event: DragEvent): void {\r\n        this.preventAndStopEventPropagation(event);\r\n        if (this.isOver && this.isTrueLeave(event) && !this.disabled) {\r\n            this.isOver = false;\r\n            this.itemDragLeave.emit();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Drop event handler.\r\n     * @param event\r\n     */\r\n    @HostListener('drop', ['$event'])\r\n    public onDrop(event: any): void {\r\n        if (!this.disabled && event instanceof DragEvent) {\r\n            this.preventAndStopEventPropagation(event);\r\n            this.isOver = false;\r\n            try {\r\n                this.itemDrop.emit(event.dataTransfer.files);\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Prevents and stops event propagration.\r\n     * @param event\r\n     */\r\n    private preventAndStopEventPropagation(event: Event): void {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    }\r\n\r\n    /**\r\n     * Checks if the leave is not trigger by a children.\r\n     * @param event\r\n     */\r\n    private isTrueLeave(event: DragEvent): boolean {\r\n        for (const c of this.whiteListClasses) {\r\n            if (event.fromElement != null && event.fromElement.className.indexOf(c) >= 0) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { DropZoneDirective } from './directives/drop-zone/drop-zone.directive';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { InputFileComponent } from './components/input-file/input-file.component';\r\nimport { InputFileConfig } from './interfaces/input-file-config';\r\nimport { InputFileService } from './services/input-file.service';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { ModuleWithProviders, NgModule } from '@angular/core';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        DropZoneDirective,\r\n        InputFileComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        MatButtonModule,\r\n        MatIconModule\r\n    ],\r\n    exports : [\r\n        InputFileComponent\r\n    ],\r\n    providers: [\r\n        InputFileService\r\n    ],\r\n    entryComponents: [ InputFileComponent ]\r\n})\r\n\r\nexport class InputFileModule {\r\n    public static forRoot(config: InputFileConfig): ModuleWithProviders {\r\n        return {\r\n            ngModule: InputFileModule,\r\n            providers: [\r\n                InputFileService,\r\n                { provide: 'config', useValue: config }\r\n            ]\r\n        };\r\n    }\r\n}\r\n"],"names":[],"mappings":"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"}
